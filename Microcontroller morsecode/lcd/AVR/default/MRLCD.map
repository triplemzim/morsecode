Archive member included because of file (symbol)

g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o (exit)
g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                              MRLCD.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
LOAD MRLCD.o
LOAD g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x1b6
 *(.vectors)
 .vectors       0x00000000       0x54 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082      0x130 MRLCD.o
                0x00000082                Peek_A_Boo
                0x0000008c                Check_If_MrLCD_Is_Busy
                0x000000a2                Send_A_Command
                0x000000ca                Send_A_Character
                0x000000f0                GotoMrLCDsLocation
                0x00000104                InitializeMrLCD
                0x00000146                main
                0x0000018a                Send_A_String
 .text          0x000001b2        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x000001b2        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                0x000001b2                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000001b2        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000001b2        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
                0x000001b2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000001b2        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x000001b2                _exit
                0x000001b2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000001b2        0x4 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000001b6                _etext = .

.data           0x00800060        0x4 load address 0x000001b6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x4 MRLCD.o
                0x00800060                firstColumnPositionsForMrLCD
 .data          0x00800064        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800064        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800064                . = ALIGN (0x2)
                0x00800064                _edata = .
                0x00800064                PROVIDE (__data_end, .)

.bss            0x00800064        0x0
                0x00800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800064        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800064        0x0 MRLCD.o
 .bss           0x00800064        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x00800064        0x0 g:/avr 4/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x00800064                PROVIDE (__bss_end, .)
                0x000001b6                __data_load_start = LOADADDR (.data)
                0x000001ba                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800064        0x0
                0x00800064                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800064                PROVIDE (__noinit_end, .)
                0x00800064                _end = .
                0x00800064                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 g:/avr 4/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 MRLCD.o

.debug_pubnames
                0x00000000       0xcb
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xcb MRLCD.o

.debug_info     0x00000000      0x420
 *(.debug_info)
 .debug_info    0x00000000      0x420 MRLCD.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1ce
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1ce MRLCD.o

.debug_line     0x00000000      0x2dd
 *(.debug_line)
 .debug_line    0x00000000      0x2dd MRLCD.o

.debug_frame    0x00000000       0x90
 *(.debug_frame)
 .debug_frame   0x00000000       0x90 MRLCD.o

.debug_str      0x00000000      0x1b0
 *(.debug_str)
 .debug_str     0x00000000      0x1b0 MRLCD.o
                                0x1e9 (size before relaxing)

.debug_loc      0x00000000      0x100
 *(.debug_loc)
 .debug_loc     0x00000000      0x100 MRLCD.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MRLCD.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x38
 .debug_pubtypes
                0x00000000       0x38 MRLCD.o
